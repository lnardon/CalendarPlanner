import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { database } from "../../firebase";
import { onValue, ref, set } from "firebase/database";

import styles from "./styles.module.css";
import Calendar from "../../components/Calendar";

const slots = [
  "12:00 A.M",
  "01:00 A.M",
  "02:00 A.M",
  "03:00 A.M",
  "04:00 A.M",
  "05:00 A.M",
  "06:00 A.M",
  "07:00 A.M",
  "08:00 A.M",
  "09:00 A.M",
  "10:00 A.M",
  "11:00 A.M",
  "12:00 P.M",
  "01:00 P.M",
  "02:00 P.M",
  "03:00 P.M",
  "04:00 P.M",
  "05:00 P.M",
  "06:00 P.M",
  "07:00 P.M",
  "08:00 P.M",
  "09:00 P.M",
  "10:00 P.M",
  "11:00 P.M",
];

export default function Home() {
  const [username, setUsername] = useState("");
  const [isLoading, setIsLoading] = useState(true);
  const [isTimeSelectionOpen, setIsTimeSelectionOpen] = useState(false);
  const [isSchedulerInfoOpen, setSchedulerInfoOpen] = useState(false);
  const [date, setDate] = useState<any>();
  const [time, setTime] = useState<any>();
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [description, setDescription] = useState("");
  const router = useRouter();

  useEffect(() => {
    Promise.resolve(ref(database, "users/" + router.query.userId)).then((a) => {
      onValue(a, (snapshot) => {
        setIsLoading(false);
        if (snapshot.size > 0) {
          const data = snapshot.val();
          setUsername(data?.username);
        } else {
          if (!isLoading) router.push("/");
        }
      });
    });
  });

  function writeUserData() {
    set(ref(database, "users/" + router.query.userId), {
      username: "name",
      email: "email",
      profile_picture: "imageUrl",
    });
  }

  function handleMeetingConfirmation() {
    fetch("./api/schedule-meeting", {
      method: "POST",
      body: JSON.stringify({
        date,
        time,
        name,
        email,
        description,
      }),
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>{username}&apos;s calendar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2>{username}&apos;s calendar</h2>
        <div className={styles.calendarContainer}>
          <Calendar
            getData={(e) => {
              setDate(e);
              setIsTimeSelectionOpen(true);
            }}
            isTimeSelectionOpen={isTimeSelectionOpen}
          />
          {isTimeSelectionOpen && (
            <div
              className={styles.timeContainer}
              style={{
                borderRadius: isSchedulerInfoOpen
                  ? "0rem"
                  : "0rem 2rem 2rem 0rem",
              }}
            >
              <h2>Select time</h2>
              <div className={styles.timeslots}>
                {slots.map((slot) => {
                  return (
                    <button
                      onClick={() => {
                        setSchedulerInfoOpen(true);
                        setTime(slot);
                      }}
                      style={{
                        backgroundColor: time === slot ? "blue" : "transparent",
                      }}
                      className={styles.timeslot}
                    >
                      {slot}
                    </button>
                  );
                })}
              </div>
            </div>
          )}
          {isSchedulerInfoOpen && (
            <div className={styles.schedulerInfoContainer}>
              <h2>Add your personal info</h2>
              <div>
                <h5>Your name:</h5>
                <input
                  type="text"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                />
              </div>
              <div>
                <h5>Your google email:</h5>
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
              </div>
              <div>
                <h5>Meeting&apos;s Description</h5>
                <input
                  type="text"
                  value={description}
                  onChange={(e) => setDescription(e.target.value)}
                />
              </div>
              <button
                onClick={handleMeetingConfirmation}
                className={styles.confirmButton}
              >
                Confirm meeting
              </button>
            </div>
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://vercel.com" target="_blank" rel="noopener noreferrer">
          Powered by Vercel
        </a>
      </footer>
    </div>
  );
}
